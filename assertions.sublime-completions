{
	"scope": "source.js, source.jsx, source.ts",

	"completions":
	[
		{ "trigger": "t.pass", "contents": "t.pass(${1/.+/'/}${1:message}${1/.+/'/});" },
		{ "trigger": "t.fail", "contents": "t.fail(${1/.+/'/}${1:message}${1/.+/'/});" },
		{ "trigger": "t.ok", "contents": "t.ok(${1:value}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.notOk", "contents": "t.notOk(${1:value}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.true", "contents": "t.true(${1:value}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.false", "contents": "t.false(${1:value}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.is", "contents": "t.is(${1:value}, ${2:expected}${3/.+/, '/}${3:message}${3/.+/'/});" },
		{ "trigger": "t.not", "contents": "t.not(${1:value}, ${2:expected}${3/.+/, '/}${3:message}${3/.+/'/});" },
		{ "trigger": "t.same", "contents": "t.same(${1:value}, ${2:expected}${3/.+/, '/}${3:message}${3/.+/'/});" },
		{ "trigger": "t.notSame", "contents": "t.notSame(${1:value}, ${2:expected}${3/.+/, '/}${3:message}${3/.+/'/});" },
		{ "trigger": "t.throws", "contents": "t.throws(${1:function|promise}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.notThrows", "contents": "t.notThrows(${1:function|promise}${2/.+/, '/}${2:message}${2/.+/'/});" },
		{ "trigger": "t.regex", "contents": "t.regex(${1:contents}, ${2:regex}${3/.+/, '/}${3:message}${3/.+/'/});" },
		{ "trigger": "t.ifError", "contents": "t.ifError(${1:error}${2/.+/, '/}${2:message}${2/.+/'/});" }
	]
}
